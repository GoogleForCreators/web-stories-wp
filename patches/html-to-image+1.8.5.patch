diff --git a/node_modules/html-to-image/.DS_Store b/node_modules/html-to-image/.DS_Store
new file mode 100644
index 0000000..ea5fe6d
Binary files /dev/null and b/node_modules/html-to-image/.DS_Store differ
diff --git a/node_modules/html-to-image/es/cloneNode.js b/node_modules/html-to-image/es/cloneNode.js
index 7083e0f..2f1d8e1 100644
--- a/node_modules/html-to-image/es/cloneNode.js
+++ b/node_modules/html-to-image/es/cloneNode.js
@@ -45,7 +45,7 @@ function cloneChildren(nativeNode, clonedNode, options) {
         const children = isSlotElement(nativeNode) && nativeNode.assignedNodes
             ? toArray(nativeNode.assignedNodes())
             : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);
-        if (children.length === 0) {
+        if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {
             return Promise.resolve(clonedNode);
         }
         return children
diff --git a/node_modules/html-to-image/es/index.js b/node_modules/html-to-image/es/index.js
index a2c554a..85037e8 100644
--- a/node_modules/html-to-image/es/index.js
+++ b/node_modules/html-to-image/es/index.js
@@ -32,7 +32,6 @@ export function toCanvas(node, options = {}) {
     return __awaiter(this, void 0, void 0, function* () {
         return toSvg(node, options)
             .then(createImage)
-            .then(delay(100))
             .then((img) => {
             const canvas = document.createElement('canvas');
             const context = canvas.getContext('2d');
diff --git a/node_modules/html-to-image/es/util.js b/node_modules/html-to-image/es/util.js
index 3848fb7..a86a7bf 100644
--- a/node_modules/html-to-image/es/util.js
+++ b/node_modules/html-to-image/es/util.js
@@ -137,6 +137,7 @@ export function createImage(url) {
         img.onload = () => resolve(img);
         img.onerror = reject;
         img.crossOrigin = 'anonymous';
+        img.decoding = 'sync';
         img.src = url;
     });
 }
