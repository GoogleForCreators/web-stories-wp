diff --git a/node_modules/puppeteer/lib/cjs/puppeteer/common/ExecutionContext.js b/node_modules/puppeteer/lib/cjs/puppeteer/common/ExecutionContext.js
index 34f19eb..b3a663b 100644
--- a/node_modules/puppeteer/lib/cjs/puppeteer/common/ExecutionContext.js
+++ b/node_modules/puppeteer/lib/cjs/puppeteer/common/ExecutionContext.js
@@ -171,8 +171,10 @@ class ExecutionContext {
                 userGesture: true,
             })
                 .catch(rewriteError);
-            if (exceptionDetails)
-                throw new Error('Evaluation failed: ' + helper_js_1.helper.getExceptionMessage(exceptionDetails));
+            if (exceptionDetails) {
+              console.log('Evaluation failed for the following function: ', pageFunction);
+              throw new Error('Evaluation failed: ' + helper_js_1.helper.getExceptionMessage(exceptionDetails));
+            }
             return returnByValue
                 ? helper_js_1.helper.valueFromRemoteObject(remoteObject)
                 : (0, JSHandle_js_1.createJSHandle)(this, remoteObject);
@@ -217,8 +219,10 @@ class ExecutionContext {
             throw error;
         }
         const { exceptionDetails, result: remoteObject } = await callFunctionOnPromise.catch(rewriteError);
-        if (exceptionDetails)
-            throw new Error('Evaluation failed: ' + helper_js_1.helper.getExceptionMessage(exceptionDetails));
+        if (exceptionDetails) {
+          console.log('Evaluation failed for the following function: ', functionText);
+          throw new Error('Evaluation failed: ' + helper_js_1.helper.getExceptionMessage(exceptionDetails));
+        }
         return returnByValue
             ? helper_js_1.helper.valueFromRemoteObject(remoteObject)
             : (0, JSHandle_js_1.createJSHandle)(this, remoteObject);
