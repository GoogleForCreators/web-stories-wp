diff --git a/node_modules/html-to-image/es/embed-images.js b/node_modules/html-to-image/es/embed-images.js
index 70e8468..c8db1a5 100644
--- a/node_modules/html-to-image/es/embed-images.js
+++ b/node_modules/html-to-image/es/embed-images.js
@@ -21,7 +21,7 @@ async function embedImageNode(clonedNode, options) {
         : clonedNode.href.baseVal;
     const dataURL = await resourceToDataURL(url, getMimeType(url), options);
     await new Promise((resolve, reject) => {
-        clonedNode.onload = resolve;
+        clonedNode.decode = resolve;
         clonedNode.onerror = reject;
         if (clonedNode instanceof HTMLImageElement) {
             clonedNode.srcset = '';
diff --git a/node_modules/html-to-image/es/util.js b/node_modules/html-to-image/es/util.js
index d3f734b..e3667ef 100644
--- a/node_modules/html-to-image/es/util.js
+++ b/node_modules/html-to-image/es/util.js
@@ -136,7 +136,7 @@ export function canvasToBlob(canvas, options = {}) {
 export function createImage(url) {
     return new Promise((resolve, reject) => {
         const img = new Image();
-        img.onload = () => resolve(img);
+        img.decode = () => resolve(img);
         img.onerror = reject;
         img.crossOrigin = 'anonymous';
         img.decoding = 'sync';
