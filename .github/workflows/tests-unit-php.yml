name: PHP Unit Tests

on:
  push:
    # Only run if PHP-related files changed.
    paths:
      - '**.php'
      - 'phpunit.xml.dist'
      - 'phpunit-multisite.xml.dist'
      - 'composer.json'
      - 'composer.lock'
      - 'tests/phpunit/**'
      - 'includes/data/**'
      - '.github/workflows/tests-unit-php.yml'
    branches:
      - main
      - release/*
  pull_request:
    # Only run if PHP-related files changed.
    paths:
      - '**.php'
      - 'phpunit.xml.dist'
      - 'phpunit-multisite.xml.dist'
      - 'composer.json'
      - 'composer.lock'
      - 'tests/phpunit/**'
      - 'includes/data/**'
      - '.github/workflows/tests-unit-php.yml'

permissions:
  contents: read

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the (target) branch name.
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  unit-php:
    name: PHP ${{ matrix.php }} - WP ${{ matrix.wp }}${{ matrix.experimental && ' (experimental)' || '' }}${{ matrix.coverage && ' (with coverage)' || '' }}${{ matrix.random && ' (in random order)' || '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 --restart=always
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        php: ['8.0']
        wp: ['latest']
        coverage: [false]
        experimental: [false]
        include:
          # Using PHP 7.4 for code coverage run as 8.0 throws errors.
          - php: '7.4'
            wp: 'latest'
            coverage: true
            experimental: false

          - php: '7.2'
            wp: '5.7'
            experimental: false

          - php: '8.0'
            wp: 'latest'
            random: true
            experimental: true

          - php: '8.1'
            wp: 'trunk'
            experimental: true

          - php: '8.2'
            wp: 'trunk'
            experimental: true

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      # PHP-Scoper only works on PHP 7.4+ and we need to prefix our dependencies to accurately test them.
      # So we temporarily switch PHP versions, do a full install and then remove the package.
      # Then switch back to the PHP version we want to test and delete the vendor directory.

      - name: Setup PHP 8.0
        uses: shivammathur/setup-php@e04e1d97f0c0481c6e1ba40f8a538454fe5d7709
        with:
          php-version: '8.0'
          tools: composer

      - name: Install PHP dependencies
        uses: ramsey/composer-install@f680dac46551dffb2234a240d65ae806c2999dd6
        with:
          composer-options: '--prefer-dist --no-progress --no-interaction'

      - name: Remove prefixed dependencies
        run: rm -rf vendor/*

      - name: Setup PHP
        uses: shivammathur/setup-php@e04e1d97f0c0481c6e1ba40f8a538454fe5d7709
        with:
          php-version: ${{ matrix.php }}
          extensions: mysql
          coverage: ${{ matrix.coverage && 'xdebug' || 'none' }}
          tools: composer, cs2pr

      - name: Install PHP dependencies
        uses: ramsey/composer-install@f680dac46551dffb2234a240d65ae806c2999dd6
        with:
          composer-options: '--prefer-dist --no-progress --no-interaction --no-scripts'

      # Installs a different PHPUnit version depending on the WP/PHP version combo we're testing against.
      #
      # | WP  / PHP | PHPUnit |
      # |-----------|---------|
      # | 5.7 / 7.2 | 7       |
      # | 5.9 / 7.2 | 8       |
      # | 5.9 / 7.4 | 9       |
      # | *   / 8   | 9       |
      #
      # See https://make.wordpress.org/core/handbook/references/phpunit-compatibility-and-wordpress-versions/
      - name: Update PHPUnit
        run: |
          if [[ $WP_VERSION == "5.7" && $PHP_VERSION == "7.2" ]]; then
            echo "Installing PHPUnit 7.5.x"
            composer require --ignore-platform-reqs --no-interaction --no-scripts phpunit/phpunit:^7.5 --with-dependencies
          elif [[ $PHP_VERSION == "7.2" ]]; then
            echo "Installing PHPUnit 8.5.x"
            composer require --ignore-platform-reqs --no-interaction --no-scripts phpunit/phpunit:^8.5 --with-dependencies
            echo "Downgrading phpunit/php-token-stream because the latest version requires PHP 7.3"
            composer require --ignore-platform-reqs --no-interaction --no-scripts phpunit/php-token-stream:^3.1.3 --with-dependencies
          elif [[ $WP_VERSION == "latest" || $WP_VERSION == "trunk" || $PHP_VERSION == "7.4" ]]; then
            echo "Installing latest version of PHPUnit"
            composer update --ignore-platform-reqs --no-interaction --no-scripts yoast/phpunit-polyfills --with-dependencies
          fi
        env:
          WP_VERSION: ${{ matrix.wp }}
          PHP_VERSION: ${{ matrix.php }}

      - name: Composer dump autoload
        run: composer dump-autoload --no-interaction

      - name: Shutdown default MySQL service
        run: sudo service mysql stop

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"${{ job.services.mysql.ports[3306] }}" --silent; do
            sleep 1
          done

      - name: Set up tests
        run: bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1:${{ job.services.mysql.ports['3306'] }} ${{ matrix.wp }} true

      - name: Set up problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run tests
        run: |
          npm run test:php:unit
          npm run test:php:integration:single
          npm run test:php:integration:multisite
        if: ${{ ! matrix.coverage && ! matrix.random }}

      - name: Run tests with coverage
        run: |
          npm run test:php:unit -- --coverage-clover build/logs/php-coverage.xml
          npm run test:php:integration:single -- --coverage-clover build/logs/php-coverage-integration.xml
          npm run test:php:integration:multisite -- --coverage-clover build/logs/php-coverage-multisite.xml
        if: ${{ matrix.coverage && ! matrix.random }}

      - name: Run tests in random order
        run: |
          npm run test:php:unit -- --order-by random
          npm run test:php:integration:single -- --order-by random
          npm run test:php:integration:multisite -- --order-by random
        if: ${{ matrix.random }}

      - name: Upload code coverage report
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        with:
          file: build/logs/*.xml
        if: ${{ matrix.coverage }}
