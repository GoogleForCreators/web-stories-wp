name: E2E Tests

on:
  push:
    # Don't run for irrelevant changes.
    paths-ignore:
      - 'docs/**'
      - '.storybook/**'
      - '.wordpress-org/**'
      - '__mocks__/**'
      - '__static__/**'
      - 'tests/**'
      - '**.md'
      - '**.yml'
      - '**.neon.dist'
      - '**.xml.dist'
      - 'readme.txt'
      - '.editorconfig'
      - '.eslint*'
      - '.markdownlint*'
      - '.phpstorm.meta.php'
      - '.prettier*'
      - '.stylelint*'
      - '.github/workflows/**'
      - '!.github/workflows/tests-e2e.yml'
    branches:
      - main
      - release/*
  pull_request:
    # Don't run for irrelevant changes.
    paths-ignore:
      - 'docs/**'
      - '.storybook/**'
      - '.wordpress-org/**'
      - '__mocks__/**'
      - '__static__/**'
      - 'tests/**'
      - '**.md'
      - '**.yml'
      - '**.neon.dist'
      - '**.xml.dist'
      - 'readme.txt'
      - '.editorconfig'
      - '.eslint*'
      - '.markdownlint*'
      - '.phpstorm.meta.php'
      - '.prettier*'
      - '.stylelint*'
      - '.github/workflows/**'
      - '!.github/workflows/tests-e2e.yml'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
  contents: read

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the (target) branch name.
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build plugin
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Setup Node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Setup PHP
        uses: shivammathur/setup-php@e04e1d97f0c0481c6e1ba40f8a538454fe5d7709
        with:
          php-version: '8.0'
          coverage: none
          tools: composer

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Install PHP dependencies
        uses: ramsey/composer-install@f680dac46551dffb2234a240d65ae806c2999dd6
        with:
          composer-options: '--prefer-dist --no-progress --no-interaction'

      - name: Build plugin
        run: npm run build:js
        env:
          # TODO: remove eventually
          DISABLE_PREVENT: true
          DISABLE_QUICK_TIPS: true

      - name: Bundle plugin
        run: npm run workflow:build-plugin

      - name: Upload bundle
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: web-stories
          path: build/web-stories

  nonce:
    name: Percy Nonce
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.nonce.outputs.result }}
    steps:
      - id: nonce
        run: echo "::set-output name=result::${{ github.run_id }}-${{ github.run_attempt }}-$(date +%s)"

  e2e:
    name: '${{ matrix.browser }} - WP ${{ matrix.wp }} (${{ matrix.shard }})'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: ${{ matrix.experimental == true }}
    needs: [build, nonce]
    strategy:
      matrix:
        # TODO: add back Firefox once support is more mature.
        browser: ['chrome']
        wp: ['5.7']
        snapshots: [false]
        # We want to split up the tests into 2 parts running in parallel.
        shard: ['1/2', '2/2']
        include:
          - browser: 'chrome'
            wp: 'latest'
            snapshots: true
            shard: '1/2'
          - browser: 'chrome'
            wp: 'latest'
            snapshots: true
            shard: '2/2'

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Download bundle
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: web-stories

      # See https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
      - name: Install libgbm1
        run: sudo apt-get install libgbm1

      - name: Install dependencies
        run: |
          npm install puppeteer
          npm install expect-puppeteer --no-save
          npx patch-package # Apply patches to expect-puppeteer
        env:
          PUPPETEER_PRODUCT: ${{ matrix.browser }}

      - name: Start Docker environment
        run: npm run env:start
        env:
          COMPOSE_INTERACTIVE_NO_CLI: true
          WP_VERSION: ${{ matrix.wp }}

      - name: Get Chromium executable path
        id: chromium_path
        run: |
          CHROMIUM=$(node -p "const puppeteer = require('puppeteer'); puppeteer.executablePath();")
          echo "::set-output name=chromium_path::${CHROMIUM}"
        if: ( matrix.snapshots ) && ( github.event.pull_request.draft == false )

      - name: Run E2E tests with percy
        run: npm run test:e2e:percy -- -- --shard=$SHARD
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E }}
          WP_VERSION: ${{ matrix.wp }}
          PERCY_BROWSER_EXECUTABLE: ${{ steps.chromium_path.outputs.chromium_path }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
          SHARD: ${{ matrix.shard }}
        if: ( matrix.snapshots ) && ( github.event.pull_request.draft == false )

      - name: Run E2E tests
        run: npm run test:e2e -- --shard=$SHARD
        env:
          WP_VERSION: ${{ matrix.wp }}
          SHARD: ${{ matrix.shard }}
        if: ( ! matrix.snapshots ) || ( github.event.pull_request.draft == true )

      - name: Stop Docker environment
        run: npm run env:stop
        if: always()
        env:
          COMPOSE_INTERACTIVE_NO_CLI: true

      - name: Upload artifacts
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        if: always()
        with:
          name: failures-artifacts
          path: build/e2e-artifacts
          if-no-files-found: ignore

  percy:
    name: Percy
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: >
      always() &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.head.repo.fork == false &&
      github.event.pull_request.user.login != 'dependabot[bot]'
    needs: [e2e, nonce]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Setup Node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm install @percy/cli

      - name: Finalize Percy build
        run: npx percy build:finalize
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
