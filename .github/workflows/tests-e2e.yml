name: E2E Tests

on:
  push:
    # Don't run for irrelevant changes.
    paths-ignore:
      - 'docs/**'
      - '.storybook/**'
      - '.wordpress-org/**'
      - '__mocks__/**'
      - '__static__/**'
      - 'tests/**'
      - '**.md'
      - '**.yml'
      - '**.neon.dist'
      - '**.xml.dist'
      - 'readme.txt'
      - '.editorconfig'
      - '.eslint*'
      - '.markdownlint*'
      - '.phpstorm.meta.php'
      - '.prettier*'
      - '.stylelint*'
      - '.github/workflows/**'
      - '!.github/workflows/tests-e2e.yml'
    branches:
      - main
      - release/*
  pull_request:
    # Don't run for irrelevant changes.
    paths-ignore:
      - 'docs/**'
      - '.storybook/**'
      - '.wordpress-org/**'
      - '__mocks__/**'
      - '__static__/**'
      - 'tests/**'
      - '**.md'
      - '**.yml'
      - '**.neon.dist'
      - '**.xml.dist'
      - 'readme.txt'
      - '.editorconfig'
      - '.eslint*'
      - '.markdownlint*'
      - '.phpstorm.meta.php'
      - '.prettier*'
      - '.stylelint*'
      - '.github/workflows/**'
      - '!.github/workflows/tests-e2e.yml'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
  contents: read

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the (target) branch name.
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build plugin
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Setup PHP
        uses: shivammathur/setup-php@1fdc5e773bb54b5aa541c73679d6e9acc692d0cd
        with:
          php-version: '8.0'
          coverage: none
          tools: composer

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Install PHP dependencies
        uses: ramsey/composer-install@83af392bf5f031813d25e6fe4cd626cdba9a2df6
        with:
          composer-options: '--prefer-dist --no-progress --no-interaction'

      - name: Setup Bun
        uses: oven-sh/setup-bun@4573031972107e0af692492ee967d9022deafd7b
        with:
          bun-version: latest

      - name: Build plugin
        run: bun run build:js
        env:
          # TODO: remove eventually
          DISABLE_PREVENT: true
          DISABLE_QUICK_TIPS: true

      - name: Bundle plugin
        run: bun run workflow:build-plugin

      - name: Upload bundle
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: web-stories
          path: build/web-stories

  nonce:
    name: Percy Nonce
    runs-on: ubuntu-latest
    outputs:
      result: ${{ env.result }}
    steps:
      - id: nonce
        run: echo "result=${{ github.run_id }}-${{ github.run_attempt }}-$(date +%s)" >> $GITHUB_ENV

  e2e:
    name: '${{ matrix.browser }} - WP ${{ matrix.wp }} (${{ matrix.shard }})'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: ${{ matrix.experimental == true }}
    needs: [build, nonce]
    strategy:
      fail-fast: false
      matrix:
        # TODO: add back Firefox once support is more mature.
        browser: ['chrome']
        wp: ['6.0']
        snapshots: [false]
        experimental: [false]
        # We want to split up the tests into 2 parts running in parallel.
        shard: ['1/2', '2/2']
        include:
          - browser: 'chrome'
            wp: 'latest'
            snapshots: true
            shard: '1/2'
          - browser: 'chrome'
            wp: 'latest'
            snapshots: true
            shard: '2/2'

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          disable-file-monitoring: true
          egress-policy: audit
          allowed-endpoints: >
            github.com:443
            objects.githubusercontent.com:443
            packagist.org:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            docker.io:443
            registry-1.docker.io:443
            auth.docker.io:443

      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

      - name: Download bundle
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: web-stories

      # See https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
      - name: Install libgbm1
        run: sudo apt-get install libgbm1

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm install puppeteer
        env:
          PUPPETEER_PRODUCT: ${{ matrix.browser }}

      - name: Start Docker environment
        run: npm run env:start
        env:
          COMPOSE_INTERACTIVE_NO_CLI: true
          WP_VERSION: ${{ matrix.wp }}

      - name: Get Chromium executable path
        id: chromium_path
        run: |
          CHROMIUM=$(node -p "const puppeteer = require('puppeteer'); puppeteer.executablePath();")
          echo "chromium_path=${CHROMIUM}" >> $GITHUB_ENV
        if: ( matrix.snapshots ) && ( github.event.pull_request.draft == false )

      - name: Download AMP validator JS
        id: amp_validator
        run: |
          cd $RUNNER_TEMP && curl -O -f -s -S https://cdn.ampproject.org/v0/validator_wasm.js
          AMP_VALIDATOR_FILE="${RUNNER_TEMP}/validator_wasm.js"
          echo "validator_file=$AMP_VALIDATOR_FILE" >> $GITHUB_ENV

      - name: Run E2E tests with percy
        run: npm run test:e2e:percy -- -- --shard=$SHARD
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E }}
          WP_VERSION: ${{ matrix.wp }}
          PERCY_BROWSER_EXECUTABLE: ${{ env.chromium_path }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
          SHARD: ${{ matrix.shard }}
          AMP_VALIDATOR_FILE: ${{ env.validator_file }}
        if: ( matrix.snapshots ) && ( github.event.pull_request.draft == false )

      - name: Run E2E tests
        run: npm run test:e2e -- --shard=$SHARD
        env:
          WP_VERSION: ${{ matrix.wp }}
          SHARD: ${{ matrix.shard }}
          AMP_VALIDATOR_FILE: ${{ env.validator_file }}
        if: ( ! matrix.snapshots ) || ( github.event.pull_request.draft == true )

      - name: Stop Docker environment
        run: npm run env:stop
        if: always()
        env:
          COMPOSE_INTERACTIVE_NO_CLI: true

      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        if: always()
        with:
          name: failures-artifacts
          path: build/e2e-artifacts
          if-no-files-found: ignore

  percy:
    name: Percy
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: >
      always() &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.head.repo.fork == false &&
      github.event.pull_request.user.login != 'dependabot[bot]'
    needs: [e2e, nonce]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            percy.io:443
            registry.npmjs.org:443
            storage.googleapis.com:443

      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm install @percy/cli

      - name: Finalize Percy build
        run: npx percy build:finalize
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_E2E }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
