# npm packages release automation

name: npm Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1'
  # TODO: Just for testing. Remove after testing.
  pull_request:
    branches:
      - main

env:
  PRODUCTION_REGISTRY_URL: https://wombat-dressing-room.appspot.com
  LOCAL_REGISTRY_URL: http://localhost:4873

jobs:
  dry-run:
    name: Dry-run release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # See go/npm-publish
      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      # For the time being, using incremental versions like v0.1.202111302140
      # Not committing any changes here for the dry run.
      - name: Version bumps
        run: npm version --no-git-tag-version --workspaces "0.1.$(date -u +%Y%m%d%H%M)"

      # Set up a local npm registry with Verdaccio.
      - name: Set up local registry
        run: bash bin/setup-local-npm-registry.sh

      # Using Verdaccio
      - name: Publish packages locally
        run: npm --registry=$LOCAL_REGISTRY_URL --workspaces publish

      # Undo the version bumps in Git. We only needed them for testing.
      - name: Clean up local changes
        run: git checkout .

      # Verifies that packages can be installed without issues.
      - name: Install published packages
        run: |
          PUBLIC_PACKAGES=$(jq -r 'select(.private == false) | .name' $(find packages -name "package.json"))
          TMPDIR=${TMPDIR-/tmp}
          TMPDIR=$(echo $TMPDIR | sed -e "s/\/$//")
          TEST_DIR=${TEST_DIR-$TMPDIR/packages-test}
          mkdir $TEST_DIR
          cd $TEST_DIR
          npm init --yes
          npm --registry=$LOCAL_REGISTRY_URL install $PUBLIC_PACKAGES

      - name: Stop local registry
        run: bash bin/stop-local-npm-registry.sh

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [dry-run]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # See go/npm-publish
      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version-file: '.nvmrc'
          cache: npm
          registry-url: ${{ env.PRODUCTION_REGISTRY_URL }}
          scope: '@googleforcreators'

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      # For the time being, using incremental versions like v0.1.202111302140
      # `npm version` updates all packages, even the ones we don't intend to publish.
      # To address this, we undo the version change for private packages.
      # We're doing the commit ourselves since committing doesn't work properly when using workspaces.
      # See https://github.com/npm/cli/issues/4017
      - name: Version bumps
        run: |
          OUTPUT=$(npm version --no-git-tag-version --workspaces "0.1.$(date -u +%Y%m%d%H%M)")
          # Workaround: `npm version` returns the new version for *every* package.
          # Just grab the very last one from the last line, since they all should be identical anyway.
          # We then use this to manually commit and tag the version bump
          NEW_VERSION="${OUTPUT##*$'\n'}"
          for package in ./packages/*/package.json; do
            if [[ $(cat $package | jq '.private') == true ]]; then
              git checkout --quiet $package
            fi
          done
          git add packages/*/package.json
          git commit -m "Tagging npm package version $NEW_VERSION"
          git tag $NEW_VERSION
          git push origin main

      # Dry-run releasing
      - name: Dry-run production release
        run: npm publish --workspaces --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISHING_TOKEN }}

      #      # Do the actual publishing to npmjs.com.
      #      - name: Publish packages to production
      #        run: npm publish --workspaces
      #        env:
      #          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISHING_TOKEN }}

      # Undo the version bumps in Git. We only needed them for publishing.
      - name: Clean up local changes
        run: git checkout .
