name: Lint I18N

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 1-5'
  push:
    paths:
      - '.github/workflows/lint-i18n.yml'
  pull_request:
    paths:
      - '.github/workflows/lint-i18n.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      # TODO: Switch to WP-CLI stable (wp-cli.phar) once 2.5.0 is out.
      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli-nightly.phar
          chmod +x wp-cli.phar
          mkdir -p bin
          mv wp-cli.phar bin/wp
          echo "WP_CLI_BIN_DIR=${PWD}/bin" >> $GITHUB_ENV

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Cache node modules
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        env:
          cache-name: cache-node-modules

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer:v1

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup Composer cache
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          npm ci
          composer install --prefer-dist --no-suggest --no-progress --no-interaction
        env:
          CI: true
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Build plugin
        run: npm run build:js

      - name: Bundle regular version
        run: npm run workflow:build-plugin

      - name: Generate POT file
        run: |
          WARNINGS=$((wp i18n make-pot build/web-stories web-stories.pot) 2>&1 >/dev/null)
          EXPECTED_NUMBER_OF_STRINGS=1000
          NUMBER_OF_FOUND_STRINGS=$(grep -o msgstr web-stories.pot | wc -l | xargs)

          if (( "$NUMBER_OF_FOUND_STRINGS" < "$EXPECTED_NUMBER_OF_STRINGS" )); then
            echo "String extraction found only $NUMBER_OF_FOUND_STRINGS strings. Expected at least $EXPECTED_NUMBER_OF_STRINGS"
            exit 1
          fi

          WARNINGS=$((wp i18n make-pot build/web-stories web-stories.pot) 2>&1 >/dev/null)

          if [[ ! -z "$var" ]]; then
            echo "$WARNINGS"
            exit 1
          fi
