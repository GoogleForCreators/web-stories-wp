# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

dist: xenial

language: php

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.cache/composer
    - $HOME/.jest-cache
    - $HOME/.npm
    - $HOME/.nvm/.cache
    - $HOME/.wp-cli/.cache

branches:
  only:
    - master

env:
  global:
    - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

install:
  - |
    if [ "$LINT" = "1" ] || [ "$JS" = "1" ] || [ "$E2E" = "1" ] || [ "$DEPLOY_PLUGIN" = "1" ]; then
      nvm install
      npm ci
    fi
  - |
    if [ "$LINT" = "1" ] || [ "$PHP" = "1" ] || [ "$E2E" = "1" ] || [ "$DEPLOY_PLUGIN" = "1" ]; then
      composer install --no-interaction
    fi
  - |
    if [ "$DEPLOY_PLUGIN" = "1" ]; then
      curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      chmod +x wp-cli.phar
      mv wp-cli.phar $HOME/wp
      export PATH="$HOME:$PATH"
      wp package install git@github.com:wp-cli/dist-archive-command.git
    fi

before_script:
  - |
    if [ "$LINT" = "1" ]; then
      composer require --no-interaction --dev ergebnis/composer-normalize --ignore-platform-reqs
    fi
  - |
    if [ "$ANALYSIS" = "1" ]; then
      # phpstan only supports PHP 7.1+. Ignore version conflicts.
      composer require --no-interaction --dev szepeviktor/phpstan-wordpress --ignore-platform-reqs
    fi
  - |
    if [ "$COVERAGE" != "1" ]; then
      phpenv config-rm xdebug.ini || echo "xdebug.ini does not exist."
    fi

script:
  - |
    if [ "$LINT" = "1" ]; then
      composer --no-interaction validate --no-check-all
      composer --no-interaction normalize --dry-run
      npm run lint:css
      npm run lint:js
      npm run lint:php
      npm run lint:md
    fi
  - |
    if [ "$JS" = "1" ]; then
      if [ "$COVERAGE" = "1" ]; then
        npm run test:js -- --ci --cacheDirectory="$HOME/.jest-cache" --collectCoverage
        bash <(curl -s https://codecov.io/bash) -cF javascript -f build/logs/lcov.info
      else
        npm run test:js -- --ci --cacheDirectory="$HOME/.jest-cache"
      fi
    fi
  - |
    if [ "$PHP" = "1" ]; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost
      if [ "$COVERAGE" = "1" ]; then
        npm run test:php -- --coverage-clover build/logs/clover.xml
        bash <(curl -s https://codecov.io/bash) -cF php -f build/logs/clover.xml
      else
        npm run test:php
      fi
    fi
  - |
    if [ "$ANALYSIS" = "1" ]; then
      vendor/bin/phpstan analyze --memory-limit=256M
    fi
  - |
    if [ "$E2E" = "1" ]; then
      npm run build:js
      npm run env:start
      npm run env:e2e:ci
      npm run env:stop
    fi

jobs:
  fast_finish: true
  include:
    - stage: lint
      name: Lint (PHP, JavaScript, CSS, Markdown, and configuration files)
      php: 7.4
      env: LINT=1
    - name: Static Analysis (PHPStan)
      php: 7.4
      env: ANALYSIS=1
    - stage: test
      name: JavaScript unit tests
      php: 7.4
      env: JS=1
    - name: PHP unit tests (7.4, WordPress latest)
      php: 7.4
      env: PHP=1 WP_VERSION=latest
    - name: PHP unit tests (7.3, WordPress latest)
      php: 7.3
      env: PHP=1 WP_VERSION=latest
    - name: PHP unit tests (7.0, WordPress latest)
      php: 7.0
      env: PHP=1 WP_VERSION=latest
    - name: PHP unit tests (5.6, WordPress latest)
      php: 5.6
      env: PHP=1 WP_VERSION=latest
    - name: PHP unit tests (nightly, WordPress trunk)
      php: nightly
      env: PHP=1 WP_VERSION=trunk
    - name: PHP and JavaScript unit tests (7.4, WordPress latest, with code coverage)
      if: branch = master AND type = push
      php: 7.4
      env: JS=1 PHP=1 COVERAGE=1 WP_VERSION=latest
    - name: E2E tests
      php: 7.4
      env: E2E=1 WP_VERSION=latest PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
    - stage: deploy
      if: (NOT type IN (pull_request)) AND (branch = master)
      php: 7.3
      name: Deploy Storybook / Playground
      env: DEPLOY_PLUGIN=1
      before_deploy:
        - npm run build-storybook
      deploy:
        - provider: pages
          edge: true
          github_token: $GITHUB_TOKEN
          keep_history: true
          local_dir: build/storybook
          on:
            branch: master
        - provider: script
          edge: true
          # This script also runs `npm run build`.
          script: bin/deploy-to-test-environment.sh
          on:
            branch: master

services:
  - mysql

addons:
  ssh_known_hosts: codeserver.dev.6b7f1eeb-705b-4201-864d-2007030c8372.drush.in:2222
